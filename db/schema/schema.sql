CREATE TABLE banned_users(ban_id VARCHAR PRIMARY KEY, user_id VARCHAR, telegram_user_id BIGINT, reason VARCHAR, banned_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL);;
CREATE TABLE client_tokens(token_id VARCHAR PRIMARY KEY, user_id VARCHAR NOT NULL, telegram_user_id BIGINT NOT NULL, token_hash VARCHAR NOT NULL, "role" VARCHAR DEFAULT('client') NOT NULL, issued_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL, expires_at TIMESTAMP NOT NULL, revoked_at TIMESTAMP, user_agent VARCHAR, ip_hash VARCHAR, last_used_at TIMESTAMP);;
CREATE TABLE creatures(creature_id VARCHAR PRIMARY KEY, owner_user_id VARCHAR NOT NULL, "name" VARCHAR NOT NULL, persona VARCHAR, avatar_url VARCHAR, is_system BOOLEAN DEFAULT(CAST('f' AS BOOLEAN)) NOT NULL, created_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL);;
CREATE TABLE messages(message_id VARCHAR, message_type VARCHAR, origin VARCHAR, sender_user_id VARCHAR, sender_creature_id VARCHAR, telegram_username VARCHAR, telegram_user_id BIGINT, related_sys_event_id VARCHAR, related_track_step_id VARCHAR, "content" VARCHAR, message_data_json JSON, log_data VARCHAR, created_at TIMESTAMP);;
CREATE TABLE message_recipients(message_id VARCHAR, recipient_user_id VARCHAR, read_flag BOOLEAN DEFAULT(CAST('f' AS BOOLEAN)) NOT NULL, read_at TIMESTAMP, PRIMARY KEY(message_id, recipient_user_id));;
CREATE TABLE message_types(message_type VARCHAR PRIMARY KEY, description VARCHAR);;
CREATE TABLE metrics(metric_id VARCHAR PRIMARY KEY, "name" VARCHAR NOT NULL, metric_type VARCHAR NOT NULL, definition VARCHAR, anchors_json JSON, created_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL, updated_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL, CHECK((metric_type IN ('adult', 'child', 'triage', 'disc'))));;
CREATE TABLE metric_groups(group_id VARCHAR PRIMARY KEY, "name" VARCHAR NOT NULL, description VARCHAR, created_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL, element_code VARCHAR, element_ru VARCHAR);;
CREATE TABLE metric_group_members(group_id VARCHAR, metric_id VARCHAR, weight DOUBLE NOT NULL, PRIMARY KEY(group_id, metric_id), CHECK(((weight >= 0) AND (weight <= 1))));;
CREATE TABLE metric_types(metric_type VARCHAR PRIMARY KEY, description VARCHAR);;
CREATE TABLE sessions(session_id VARCHAR PRIMARY KEY, user_id VARCHAR NOT NULL, created_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL, expires_at TIMESTAMP NOT NULL, revoked_at TIMESTAMP, ip_hash VARCHAR, user_agent VARCHAR, session_type VARCHAR);;
CREATE TABLE step_metric_scores(score_id VARCHAR PRIMARY KEY, step_id VARCHAR NOT NULL, student_id VARCHAR NOT NULL, metric_id VARCHAR NOT NULL, "value" INTEGER NOT NULL, rater_user_id VARCHAR NOT NULL, role_at_rate VARCHAR, "comment" VARCHAR, created_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL, CHECK(("value" BETWEEN 0 AND 100)));;
CREATE TABLE sys_events(sys_event_id VARCHAR PRIMARY KEY, event_type VARCHAR NOT NULL, actor_user_id VARCHAR, subject_user_id VARCHAR, context VARCHAR, occurred_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL);;
CREATE TABLE sys_event_types(event_type VARCHAR PRIMARY KEY, description VARCHAR);;
CREATE TABLE tracks(track_id VARCHAR PRIMARY KEY, title VARCHAR NOT NULL, description VARCHAR, owner_user_id VARCHAR NOT NULL, start_at TIMESTAMP, end_at TIMESTAMP, next_track_id VARCHAR, status VARCHAR DEFAULT('draft') NOT NULL, created_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL, updated_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL, CHECK((status IN ('draft', 'active', 'archived'))));;
CREATE TABLE track_participants(track_id VARCHAR, user_id VARCHAR, role_in_track VARCHAR NOT NULL, joined_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL, CHECK((role_in_track IN ('owner', 'teacher', 'student', 'mentor', 'assistant'))), PRIMARY KEY(track_id, user_id));;
CREATE TABLE track_steps(step_id VARCHAR PRIMARY KEY, track_id VARCHAR NOT NULL, step_type VARCHAR NOT NULL, actor_user_id VARCHAR, payload JSON, occurred_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL);;
CREATE TABLE track_step_types(step_type VARCHAR PRIMARY KEY, description VARCHAR);;
CREATE TABLE users(user_id VARCHAR PRIMARY KEY, display_name VARCHAR NOT NULL, email VARCHAR, banned BOOLEAN DEFAULT(CAST('f' AS BOOLEAN)) NOT NULL, frozen BOOLEAN DEFAULT(CAST('f' AS BOOLEAN)) NOT NULL, mentor_user_id VARCHAR, created_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL, updated_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL, telegram_id BIGINT, telegram_username VARCHAR, telegram_login_name VARCHAR, telegram_photo_url VARCHAR, web_login VARCHAR, password_hash VARCHAR, is_system BOOLEAN, undeletable BOOLEAN, last_connected TIMESTAMP);;
CREATE TABLE user_roles(user_id VARCHAR, "role" VARCHAR, granted_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL, CHECK(("role" IN ('owner', 'admin', 'teacher', 'student', 'mentor'))), PRIMARY KEY(user_id, "role"));;

