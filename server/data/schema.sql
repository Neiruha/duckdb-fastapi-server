CREATE TABLE app_settings(setting_key VARCHAR PRIMARY KEY, setting_value VARCHAR NOT NULL, updated_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL);;
CREATE TABLE banned_users(ban_id VARCHAR PRIMARY KEY, user_id VARCHAR, telegram_user_id BIGINT, reason VARCHAR, banned_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL);;
CREATE TABLE conversion_rules(set_id VARCHAR, from_metric_id VARCHAR, to_metric_id VARCHAR, weight DOUBLE NOT NULL, PRIMARY KEY(set_id, from_metric_id, to_metric_id));;
CREATE TABLE conversion_sets(set_id VARCHAR PRIMARY KEY, "name" VARCHAR NOT NULL, "scope" VARCHAR NOT NULL, student_id VARCHAR, "version" INTEGER NOT NULL, parent_set_id VARCHAR, is_active BOOLEAN DEFAULT(CAST('f' AS BOOLEAN)) NOT NULL, created_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL, updated_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL, CHECK(("scope" IN ('global', 'student'))));;
CREATE TABLE creatures(creature_id VARCHAR PRIMARY KEY, owner_user_id VARCHAR NOT NULL, "name" VARCHAR NOT NULL, persona VARCHAR, avatar_url VARCHAR, is_system BOOLEAN DEFAULT(CAST('f' AS BOOLEAN)) NOT NULL, created_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL);;
CREATE TABLE messages(message_id VARCHAR, message_type VARCHAR, origin VARCHAR, sender_user_id VARCHAR, sender_creature_id VARCHAR, telegram_username VARCHAR, telegram_user_id BIGINT, related_sys_event_id VARCHAR, related_track_step_id VARCHAR, "content" VARCHAR, message_data_json JSON, log_data VARCHAR, created_at TIMESTAMP);;
CREATE TABLE message_recipients(message_id VARCHAR, recipient_user_id VARCHAR, read_flag BOOLEAN DEFAULT(CAST('f' AS BOOLEAN)) NOT NULL, read_at TIMESTAMP, PRIMARY KEY(message_id, recipient_user_id));;
CREATE TABLE message_types(message_type VARCHAR PRIMARY KEY, description VARCHAR);;
CREATE TABLE metrics(metric_id VARCHAR PRIMARY KEY, "name" VARCHAR NOT NULL, metric_type VARCHAR NOT NULL, definition VARCHAR, anchors_json JSON, created_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL, updated_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL, CHECK((metric_type IN ('adult', 'child', 'triage', 'disc'))));;
CREATE TABLE metric_types(metric_type VARCHAR PRIMARY KEY, description VARCHAR);;
CREATE TABLE scripts(script_id VARCHAR PRIMARY KEY, title VARCHAR, "language" VARCHAR DEFAULT('Vyra') NOT NULL, body VARCHAR NOT NULL, is_active BOOLEAN DEFAULT(CAST('t' AS BOOLEAN)) NOT NULL, created_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL, updated_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL);;
CREATE TABLE sessions(session_id VARCHAR PRIMARY KEY, user_id VARCHAR NOT NULL, created_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL, expires_at TIMESTAMP NOT NULL, revoked_at TIMESTAMP, ip_hash VARCHAR, user_agent VARCHAR, session_type VARCHAR);;
CREATE TABLE step_metric_scores(score_id VARCHAR PRIMARY KEY, step_id VARCHAR NOT NULL, student_id VARCHAR NOT NULL, metric_id VARCHAR NOT NULL, "value" INTEGER NOT NULL, rater_user_id VARCHAR NOT NULL, role_at_rate VARCHAR, "comment" VARCHAR, created_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL, CHECK(("value" BETWEEN 0 AND 100)));;
CREATE TABLE sys_events(sys_event_id VARCHAR PRIMARY KEY, event_type VARCHAR NOT NULL, actor_user_id VARCHAR, subject_user_id VARCHAR, context VARCHAR, occurred_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL);;
CREATE TABLE sys_event_types(event_type VARCHAR PRIMARY KEY, description VARCHAR);;
CREATE TABLE tracks(track_id VARCHAR PRIMARY KEY, title VARCHAR NOT NULL, description VARCHAR, owner_user_id VARCHAR NOT NULL, start_at TIMESTAMP, end_at TIMESTAMP, next_track_id VARCHAR, status VARCHAR DEFAULT('draft') NOT NULL, created_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL, updated_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL, CHECK((status IN ('draft', 'active', 'archived'))));;
CREATE TABLE track_participants(track_id VARCHAR, user_id VARCHAR, role_in_track VARCHAR NOT NULL, joined_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL, CHECK((role_in_track IN ('owner', 'teacher', 'student', 'mentor', 'assistant'))), PRIMARY KEY(track_id, user_id));;
CREATE TABLE track_steps(step_id VARCHAR PRIMARY KEY, track_id VARCHAR NOT NULL, step_type VARCHAR NOT NULL, actor_user_id VARCHAR, payload JSON, occurred_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL);;
CREATE TABLE track_step_types(step_type VARCHAR PRIMARY KEY, description VARCHAR);;
CREATE TABLE ui_nodes(node_id VARCHAR PRIMARY KEY, title VARCHAR NOT NULL, roles_scope VARCHAR, access_policy VARCHAR DEFAULT('allow') NOT NULL, reroute_to_node_id VARCHAR, ui_json JSON, created_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL, kind VARCHAR, handler_key VARCHAR, url_template VARCHAR, text_input_policy VARCHAR, text_reroute_node_id VARCHAR, text_denied_message VARCHAR, commands_policy VARCHAR, commands_allow_list VARCHAR, commands_reroute_node_id VARCHAR, is_deprecated BOOLEAN DEFAULT(CAST('f' AS BOOLEAN)), is_system BOOLEAN DEFAULT(CAST('f' AS BOOLEAN)), is_exception BOOLEAN DEFAULT(CAST('f' AS BOOLEAN)), CHECK((access_policy IN ('allow', 'deny', 'reroute'))));;
CREATE TABLE ui_nodes_history(hist_id VARCHAR PRIMARY KEY, node_id VARCHAR, changed_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP), author VARCHAR, old_title VARCHAR, old_roles_scope VARCHAR, old_access_policy VARCHAR, old_reroute_to_node_id VARCHAR, old_kind VARCHAR, old_handler_key VARCHAR, old_url_template VARCHAR, old_text_input_policy VARCHAR, old_text_reroute_node_id VARCHAR, old_text_denied_message VARCHAR, old_commands_policy VARCHAR, old_commands_allow_list VARCHAR, old_commands_reroute_node_id VARCHAR, old_ui_json VARCHAR);;
CREATE TABLE ui_node_events(node_id VARCHAR, event_type VARCHAR, script_id VARCHAR, sort_order INTEGER DEFAULT(0) NOT NULL, is_active BOOLEAN DEFAULT(CAST('t' AS BOOLEAN)) NOT NULL, created_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL, PRIMARY KEY(node_id, event_type, script_id));;
CREATE TABLE ui_node_event_types(event_type VARCHAR PRIMARY KEY, description VARCHAR);;
CREATE TABLE users(user_id VARCHAR PRIMARY KEY, display_name VARCHAR NOT NULL, email VARCHAR, banned BOOLEAN DEFAULT(CAST('f' AS BOOLEAN)) NOT NULL, frozen BOOLEAN DEFAULT(CAST('f' AS BOOLEAN)) NOT NULL, mentor_user_id VARCHAR, created_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL, updated_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL, telegram_id BIGINT, telegram_username VARCHAR, telegram_login_name VARCHAR, telegram_photo_url VARCHAR, web_login VARCHAR, password_hash VARCHAR);;
CREATE TABLE user_contexts(context_id VARCHAR PRIMARY KEY, user_id VARCHAR NOT NULL, parent_context_id VARCHAR, "level" INTEGER NOT NULL, current_node_id VARCHAR, state_json JSON, allowed_nodes JSON, denied_nodes JSON, is_active BOOLEAN DEFAULT(CAST('t' AS BOOLEAN)) NOT NULL, created_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL, closed_at TIMESTAMP, context_kind VARCHAR DEFAULT('normal'), exc_type VARCHAR, exc_status VARCHAR DEFAULT('open'), exc_payload_json JSON, exc_resolved_at TIMESTAMP);;
CREATE TABLE user_roles(user_id VARCHAR, "role" VARCHAR, granted_at TIMESTAMP DEFAULT(CURRENT_TIMESTAMP) NOT NULL, CHECK(("role" IN ('owner', 'admin', 'teacher', 'student', 'mentor'))), PRIMARY KEY(user_id, "role"));;
CREATE INDEX ix_convsets_scope ON conversion_sets("scope", student_id);;
CREATE INDEX ix_creatures_owner ON creatures(owner_user_id);;
CREATE INDEX ix_creatures_system ON creatures(is_system);;
CREATE INDEX ix_ctx_current_node ON user_contexts(current_node_id);;
CREATE INDEX ix_ctx_exc ON user_contexts(exc_status, exc_type);;
CREATE INDEX ix_ctx_kind ON user_contexts(context_kind);;
CREATE INDEX ix_ctx_parent ON user_contexts(parent_context_id);;
CREATE INDEX ix_ctx_user_active ON user_contexts(user_id, is_active, "level");;
CREATE INDEX ix_messages_created ON messages(created_at);;
CREATE INDEX ix_messages_related_sys_event ON messages(related_sys_event_id);;
CREATE INDEX ix_messages_sender_creature ON messages(sender_creature_id);;
CREATE INDEX ix_messages_sender_user ON messages(sender_user_id);;
CREATE INDEX ix_messages_tg_user ON messages(telegram_user_id);;
CREATE INDEX ix_messages_type ON messages(message_type);;
CREATE INDEX ix_msgrec_recipient ON message_recipients(recipient_user_id);;
CREATE INDEX ix_sessions_expiry ON sessions(expires_at);;
CREATE INDEX ix_sessions_user ON sessions(user_id);;
CREATE INDEX ix_sms_metric ON step_metric_scores(metric_id);;
CREATE INDEX ix_sms_rater ON step_metric_scores(rater_user_id);;
CREATE INDEX ix_sms_step ON step_metric_scores(step_id);;
CREATE INDEX ix_sms_student ON step_metric_scores(student_id);;
CREATE INDEX ix_steps_time ON track_steps(occurred_at);;
CREATE INDEX ix_steps_track ON track_steps(track_id);;
CREATE INDEX ix_steps_type ON track_steps(step_type);;
CREATE INDEX ix_sysevents_actor ON sys_events(actor_user_id);;
CREATE INDEX ix_sysevents_subject ON sys_events(subject_user_id);;
CREATE INDEX ix_sysevents_type ON sys_events(event_type);;
CREATE INDEX ix_sysevents_when ON sys_events(occurred_at);;
CREATE INDEX ix_tp_role ON track_participants(role_in_track);;
CREATE INDEX ix_tracks_next ON tracks(next_track_id);;
CREATE INDEX ix_tracks_owner ON tracks(owner_user_id);;
CREATE INDEX ix_ui_ne_node ON ui_node_events(node_id, event_type, sort_order);;
CREATE INDEX ix_ui_nodes_exception ON ui_nodes(is_exception);;
CREATE INDEX ix_ui_nodes_handler ON ui_nodes(handler_key);;
CREATE INDEX ix_ui_nodes_kind ON ui_nodes(kind);;
CREATE INDEX ix_ui_nodes_system ON ui_nodes(is_system);;
CREATE INDEX ix_users_mentor ON users(mentor_user_id);;
CREATE INDEX ix_users_telegram_name ON users(telegram_login_name);;
CREATE UNIQUE INDEX ux_banned_tg ON banned_users(telegram_user_id);;
CREATE UNIQUE INDEX ux_banned_user ON banned_users(user_id);;
CREATE UNIQUE INDEX ux_users_telegram_id ON users(telegram_id);;
CREATE UNIQUE INDEX ux_users_web_login ON users(web_login);;

